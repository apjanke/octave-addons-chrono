\input texinfo    @c -*-texinfo-*-

@c %**start of header

@setfilename chrono.info
@settitle Chrono for Octave v0.1.0
@documentencoding UTF-8

@c %**end of header

@copying
This manual is for Chrono, version 0.1.0.

Copyright @copyright{} 2019 Andrew Janke

@quotation
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the same conditions as for modified versions.
@end quotation
@end copying

@documentdescription
User manual for Chrono for Octave.
@end documentdescription

@titlepage
@title  Chrono for Octave
@subtitle version 0.1.0, January 2019
@author Andrew Janke
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage


@contents

@ifnottex
@node Top, Introduction
@top Chrono for Octave

This manual is for Chrono, version 0.1.0.
@end ifnottex

@menu
* Introduction::
* Getting Started::
* Date/Time Classes::
* Time Zones::
* Missing Functionality::
* Function Reference::
* Copying::
@end menu


@node Introduction
@chapter Introduction

@quotation
Time is an illusion. Lunchtime doubly so.

@author Douglas Adams
@end quotation

This is the manual for the Chrono package version 0.1.0 for GNU Octave.

This document is a work in progress. You are invited to help improve it and
submit patches.

The Chrono package provides Matlab-compatible date/time classes for Octave,
including @code{datetime}, @code{duration}, and @code{calendarDuration}
classes.

Chrono was written by Andrew Janke <@email{floss@@apjanke.net}>. Support can be
found on the @url{https://github.com/apjanke/octave-addons-chrono, Chrono project
GitHub page}.

@node Getting Started
@chapter Getting Started

The easiest way to obtain Chrono is by using Octave's @code{pkg} package manager. To
install the latest development (unstable) head of Chrono, run this in Octave:

@example
pkg install https://github.com/apjanke/octave-addons-chrono/archive/master.zip
@end example

Soon, once the code gets a bit more stable, numbered releases for Chrono will be
available, and you should use those instead.

For development, you can obtain the source code for Chrono from the project repo on GitHub at 
@url{https://github.com/apjanke/octave-addons-chrono}. Upon first installation, run
the @file{make_local} script to build the octfiles so Chrono will work. Then add the @file{inst} directory in the repo to your Octave path.

@node Date/Time Classes
@chapter Date/Time Classes

Chrono provides date/time functionality for Octave by supplying Matlab-compatible
implementations for the @code{datetime}, @code{duration}, and @code{calendarDuration}
classes, along with related functions.

Chrono's classes are designed to be convenient to use while still being efficient.
The data representations used by Chrono are designed to be efficient and suitable
for working with large-ish data sets. A “large-ish” data set is one that can have
millions of elements or rows, but still fits in main computer memory. Chrono's main
relational and arithmetic operations are all implemented using vectorized
operations on primitive Octave data types.

@menu
* datetime class::
* duration class::
@end menu

@node datetime class
@section @code{datetime} class

A @code{datetime} is an array object that represents points in time in the familiar
Gregorian calendar.

The underlying representation is that of a datenum (a @code{double}
containing the number of days since the Matlab epoch), but encapsulating it in an
object provides several benefits: friendly human-readable display, type safety,
automatic type conversion, and time zone support. In addition to the underlying
datenum array, a @code{datetime} inclues an optional @code{TimeZone} property 
indicating what time zone the datetimes are in.

@node duration class
@section @code{duration} class

This section will describe @code{duration}.

@node Time Zones
@chapter Time Zones

This section will describe Chrono's time zone support.

Chrono's time zone data is drawn from the @uref{https://www.iana.org/time-zones, 
IANA Time Zone Database}, also known as the “Olson Database”. Chrono includes a
copy of this database in its distribution so it can work on Windows, which does
not supply it like Unix systems do.

@node Missing Functionality
@chapter Missing Functionality

Chrono is based on Matlab's date/time API and supports most of its major functionality.
But not all of it is implemented yet. The missing parts are currently:

@itemize
@item POSIX time zone support for years outside the IANA time zone database coverage
@item Week-of-year (ISO calendar) calculations
@item Various @code{'ConvertFrom'} forms for @code{datetime} and @code{duration}
@item Support for LDML formatting for @code{datetime}
@item Various functions: @code{between}, @code{caldiff}, @code{dateshift}, @code{week}
@item @code{isdst}, @code{isweekend}
@item @code{calendarDuration.split}
@item @code{duration.Format} support
@item @code{UTCOffset} and @code{DSTOffset} fields in the output of @code{timezones()}
@item Plotting support
@end itemize

It is the author's hope that all these will be implemented some day.

@node Function Reference
@chapter Function Reference

@REFERENCE_SECTION(Chrono)

@node Copying
@chapter Copying

@insertcopying

@bye
